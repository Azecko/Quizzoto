import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { getSession, useSession } from 'next-auth/react';

import Box from '@mui/material/Box';
import CircularProgress from '@mui/material/CircularProgress';
import { useQRCode } from 'next-qrcode';

import Header from '../../components/header/header';
import ShareModal from '../../components/share';
import fetchSession from '../../../lib/fetchSession';
import SessionTable from '@/components/sessionTable';
import getSessionResults from '../../../lib/sessions';
import { Button } from '@mui/material';

const BoxStyle = {
	borderRadius: '30px',
	fontWeight: '400',
	fontSize: '1.2rem',
	boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',
	padding: '2rem',
	height: 'calc(100vh - 210px)',
	width: '94%',
	color: '#696f79',
	paddingTop: '0px',
	paddingLeft: '2.5rem',
};

function QRCode({ url }) {
	const { Canvas } = useQRCode();

	return (
		<Canvas
			text={url}
			options={{
				errorCorrectionLevel: 'M',
				margin: 3,
				scale: 4,
				width: 200,
				color: {
					dark: '#696f79',
					light: '#fff',
				},
			}}
		/>
	);
}

export default function Session({ userSession, results }) {
	const [session, setSession] = useState(userSession);
	const [quizzs, setResult] = useState();

	const router = useRouter();

	useEffect(() => {
		if (!results) {
			return;
		}
		setResult(JSON.parse(results));
	}, [results]);

	return (
		<>
			<Head>
				<title>Quizzoto - Quizz</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
				<link href="https://fonts.googleapis.com/css2?family=Anta&family=Bebas+Neue&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet" />
				<link rel="stylesheet" href="/result.css" />
			</Head>
			<main>
				<Header />
				<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>
					<Box gridColumn="span 2"></Box>
					<Box gridColumn="span 10" style={BoxStyle}>
						{quizzs?.statusCode || results === 401 ? (
							<Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>
								<p>Merci de fournir un id de session correct dans l'URL.</p>
							</Box>
						) : quizzs ? (
							<>
								<Box gridColumn="span 12" display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>
									<Box gridColumn="span 6">
										<h1>{quizzs.quizzTitle}</h1>
									</Box>
									<Box gridColumn="span 6" style={{ display: 'flex', alignItems: 'center' }}>
										<ShareModal userSession={userSession} />
										<a target="_blank" href={`${new URL(window.location.href).origin}/quizz/${quizzs.quizzSlug}?s=${quizzs.sessionId}&q=1`}>{`${new URL(window.location.href).origin}/quizz/${quizzs.quizzSlug}?s=${quizzs.sessionId}&q=1`}</a>
										<QRCode url={`${new URL(window.location.href).origin}/quizz/${quizzs.quizzSlug}?s=${quizzs.sessionId}&q=1`} />
									</Box>
								</Box>
								<SessionTable data={quizzs.results} style={{ width: '100%', height: '100%' }} />
							</>
						) : (
							<Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>
								<CircularProgress />
							</Box>
						)}
					</Box>
				</Box>
			</main>
		</>
	);
}

export async function getServerSideProps(context) {
	const { sid } = context.params;

	const session = await getSession(context);
	const results = await getSessionResults(session, sid);

	return {
		props: {
			userSession: session ?? null,
			results,
		},
	};
}
