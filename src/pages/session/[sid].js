import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import Box from '@mui/material/Box';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import CircularProgress from '@mui/material/CircularProgress';
import { useQRCode } from 'next-qrcode';

import Header from '../../components/header/header';
import fetchSession from '../../../lib/fetchSession';

const BoxStyle = {
	borderRadius: '30px',
	fontWeight: '400',
	fontSize: '1.2rem',
	boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',
	padding: '2rem',
	height: '75vh',
	width: '94%',
	color: '#696f79',
	paddingTop: '0px',
	paddingLeft: '2.5rem',
};

function QRCode({ url }) {
	const { Canvas } = useQRCode();

	return (
		<Canvas
			text={url}
			options={{
				errorCorrectionLevel: 'M',
				margin: 3,
				scale: 4,
				width: 200,
				color: {
					dark: '#000',
					light: '#fff',
				},
			}}
		/>
	);
}

export default function Session() {
	const [result, setResult] = useState();

	const router = useRouter();

	useEffect(() => {
		if (!router.query.sid) {
			return;
		}
		const getData = async () => {
			const jsonData = await fetchSession(router.query.sid);
			console.log('jsonData', jsonData);
			setResult(jsonData);
			console.log(jsonData[0].quizz.quizzSlug);
		};
		getData();
	}, [router.query.sid]);

	return (
		<>
			<Head>
				<title>Quizzoto - Quizz</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
				<link href="https://fonts.googleapis.com/css2?family=Anta&family=Bebas+Neue&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet" />
				<link rel="stylesheet" href="/result.css" />
			</Head>
			<main>
				<Header />
				{result?.statusCode ? (
					<p>Merci de fournir un id de session correct dans l'URL.</p>
				) : result ? (
					<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>
						<Box gridColumn="span 2"></Box>
						<Box gridColumn="span 10" style={BoxStyle}>
							<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>
								<Box gridColumn="span 12" display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>
									<Box gridColumn="span 6">
										<h1>{result[0].quizz.title}</h1>
									</Box>
									<Box gridColumn="span 6" style={{ display: ' flex' }}>
										<a target="_blank" href={`${new URL(window.location.href).origin}/quizz/${result[0].quizz.quizzSlug}?s=${result[0].sessionId}&q=1`}>{`${new URL(window.location.href).origin}/quizz/${result[0].quizz.quizzSlug}?s=${result[0].sessionId}&q=1`}</a>
										<QRCode url={`${new URL(window.location.href).origin}/quizz/${result[0].quizz.quizzSlug}?s=${result[0].sessionId}&q=1`} />
									</Box>
								</Box>

								<Box gridColumn="span 12" style={{ overflow: 'scroll', height: '45vh' }}>
									<TableContainer component={Paper}>
										<Table sx={{ minWidth: 650 }} aria-label="simple table">
											<TableHead>
												<TableRow>
													<TableCell>Score</TableCell>
													<TableCell align="left">Answers</TableCell>
												</TableRow>
											</TableHead>
											<TableBody>
												{result.map((e, index) => (
													<TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>
														<TableCell component="th" scope="row">
															{e.score}
														</TableCell>
														<TableCell component="th" scope="row">
															<a target="_blank" href={`/result/${e._id}`}>
																{e._id}
															</a>
														</TableCell>
													</TableRow>
												))}
											</TableBody>
										</Table>
									</TableContainer>
								</Box>
							</Box>
						</Box>
					</Box>
				) : (
					<Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', verticalAlign: 'center', height: '100%' }}>
						<CircularProgress />
					</Box>
				)}
			</main>
		</>
	);
}
